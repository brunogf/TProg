/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import java.util.Map;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import tpgr32.DataLog;
import tpgr32.DataServicio;
import tpgr32.FabricaControladores;
import tpgr32.IControladorPublicacion;


/**
 *
 * @author spesamosca
 */
public class TopServiciosInternalFrame extends javax.swing.JInternalFrame {
    /**
     * Creates new form TopServiciosInternalFrame
     */
    public TopServiciosInternalFrame(){
        initComponents();
        DefaultTableModel log = (DefaultTableModel) LogsTable.getModel();
        DefaultTableModel top = (DefaultTableModel) TopServiciosTable.getModel();
        while (LogsTable.getRowCount() > 0){
            log.removeRow(0);
        }       
        while (TopServiciosTable.getRowCount() > 0) {
            top.removeRow(0);
        }
        IControladorPublicacion cp = FabricaControladores.getInstancia().getControladorPublicacion();
        Map<Integer, DataServicio> mapDS = cp.listarTopServicios();
        for (int k=9; k>=0; k--){
            if (mapDS.containsKey(k)){
                DataServicio ds = mapDS.get(k);
                top.addRow(new Object[]{10-k, ds.getNombre(), ds.getProveedor(), ds.getCantVisitas()});
            }
        }
        
        Map<Integer,DataLog> mapDL = cp.listarLogs();
        int contFila = 1;
        for (int k = 10000-mapDL.size(); k<=9999; k++){
            log.addRow(new Object[]{contFila, mapDL.get(k).getIp(), mapDL.get(k).getUrl(), mapDL.get(k).getBrowser(), mapDL.get(k).getOs()});
            contFila++;
        }             
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        InfoAccesosPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        LogsTable = new javax.swing.JTable();
        LogsLabel = new javax.swing.JLabel();
        TopServiciosLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TopServiciosTable = new javax.swing.JTable();
        TopServiciosCerrarButton = new javax.swing.JButton();
        TopServiciosActualizarButton = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.CardLayout());

        LogsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "IP", "URL", "Browser", "SO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(LogsTable);

        LogsLabel.setText("Logs");

        TopServiciosLabel.setText("Top Servicios");

        TopServiciosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Nombre", "Proveedor", "Visitas"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TopServiciosTable);

        TopServiciosCerrarButton.setText("Cerrar");
        TopServiciosCerrarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TopServiciosCerrarButtonActionPerformed(evt);
            }
        });

        TopServiciosActualizarButton.setText("Actualizar");
        TopServiciosActualizarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TopServiciosActualizarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout InfoAccesosPanelLayout = new javax.swing.GroupLayout(InfoAccesosPanel);
        InfoAccesosPanel.setLayout(InfoAccesosPanelLayout);
        InfoAccesosPanelLayout.setHorizontalGroup(
            InfoAccesosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfoAccesosPanelLayout.createSequentialGroup()
                .addGroup(InfoAccesosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InfoAccesosPanelLayout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(LogsLabel))
                    .addGroup(InfoAccesosPanelLayout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(TopServiciosLabel))
                    .addGroup(InfoAccesosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, InfoAccesosPanelLayout.createSequentialGroup()
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(TopServiciosActualizarButton)
                            .addGap(69, 69, 69)
                            .addComponent(TopServiciosCerrarButton))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, InfoAccesosPanelLayout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addGroup(InfoAccesosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        InfoAccesosPanelLayout.setVerticalGroup(
            InfoAccesosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfoAccesosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LogsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(TopServiciosLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(InfoAccesosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TopServiciosCerrarButton)
                    .addComponent(TopServiciosActualizarButton))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        getContentPane().add(InfoAccesosPanel, "card2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TopServiciosActualizarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TopServiciosActualizarButtonActionPerformed
        JPanel PanelCentral;
        PanelCentral = (JPanel)SwingUtilities.getAncestorOfClass(JPanel.class, this);
        PanelCentral.removeAll();
        JInternalFrame inf = new TopServiciosInternalFrame();
        PanelCentral.add(inf);
        PanelCentral.repaint();
        PanelCentral.revalidate();
    }//GEN-LAST:event_TopServiciosActualizarButtonActionPerformed

    private void TopServiciosCerrarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TopServiciosCerrarButtonActionPerformed
        JPanel jp;
        jp = (JPanel)SwingUtilities.getAncestorOfClass(JPanel.class, this);
        jp.remove(this);
        jp.repaint();
        jp.revalidate();
    }//GEN-LAST:event_TopServiciosCerrarButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel InfoAccesosPanel;
    private javax.swing.JLabel LogsLabel;
    private javax.swing.JTable LogsTable;
    private javax.swing.JButton TopServiciosActualizarButton;
    private javax.swing.JButton TopServiciosCerrarButton;
    private javax.swing.JLabel TopServiciosLabel;
    private javax.swing.JTable TopServiciosTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
